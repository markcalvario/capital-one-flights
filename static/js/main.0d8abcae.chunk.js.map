{"version":3,"sources":["components/Header.js","components/Places.js","data/currencies.js","components/AirportInfo.js","components/Footer.js","App.js","index.js"],"names":["Header","props","Navbar","variant","bg","className","Brand","href","title","Places","useState","sort","setSort","quotes","currency","origin","toUpperCase","destination","length","Form","Group","Label","Control","as","id","value","onChange","e","target","custom","ListGroup","map","quote","index","departure","OutboundLeg","returnInfo","InboundLeg","Item","Row","Col","xl","Date","parse","DepartureDate","toLocaleString","split","MinPrice","Code","array","currencies","AirportInfo","today","tomorrow","toISOString","setDate","getDate","setCurrency","whereFrom","setWhereFrom","whereTo","setWhereTo","deperatureDate","setDepartureDate","returnDate","setReturnDate","showResults","setShowResults","places","setPlaces","currentCurrency","setCurrentCurrency","setQuotes","error","setError","setOrigin","setDestination","lg","currencyOption","placeholder","type","Button","onClick","a","query","join","reqOptions","method","headers","fetch","response","json","console","log","Quotes","Currencies","preventDefault","fetchDepartureAirport","fetchArrivalAirport","fetchMyAPI","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d8abcae.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\n\nfunction Header(props) { \n    return (\n        <Navbar variant=\"dark\" bg=\"dark\" className=\"px-5 py-3 \">\n            <Navbar.Brand href=\"/\">{props.title}</Navbar.Brand>\n        </Navbar>\n    )\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport './Places.css';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Places(props) { \n    const [sort, setSort] = useState(\"Low To High\");\n\n    let quotes = props.quotes;\n    let currency = props.currency;\n\n    \n    let origin = props.origin.toUpperCase();\n    let destination = props.destination.toUpperCase();\n\n    \n\n\n\n    return (\n        \n        <div className=\"container-fluid w-75 py-4\">\n                <div className=\"w-25\">\n                    \n                    {quotes ? quotes.length : 0} results\n                    <Form className=\"py-2\">\n                        <Form.Group>\n                            <Form.Label>Sort by Price:</Form.Label>\n                            <Form.Control as=\"select\" id=\"currencies\" value={sort} onChange={(e)=> setSort(e.target.value)} custom>\n                                <option>Low To High</option>\n                                <option>High To Low</option>\n                            </Form.Control>\n                        </Form.Group>\n                \n                    </Form>\n                </div>\n            \n            \n            <ListGroup>\n                {sort===\"Low To High\" && quotes ? \n                    (quotes.map((quote,index)=>{\n                        const departure = quote.OutboundLeg;\n                        const returnInfo = quote.InboundLeg;\n                        return (\n                            <ListGroup.Item key={index} className=\"py-2\">\n                                <Row >\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\"> Departure Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(departure.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p>{destination.SkyscannerCode} to {origin.SkyscannerCode} </p>: <></>} */}\n                                        <p>{origin} to {destination} </p>\n                                    </Col>\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\">Return Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(returnInfo.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p> {origin.SkyscannerCode} to {destination.SkyscannerCode} </p>: <></>} */}\n                                        <p> {destination} to {origin} </p>\n                                    </Col>\n                                    <Col xl={2} className=\"text-center\">\n                                        {quote.MinPrice}\n                                        {currency ? <span> {currency[0].Code}</span>:<></>}\n                                    </Col>\n                                </Row>      \n                            </ListGroup.Item>\n                        )\n                    }) ): quotes ?\n                    (quotes.map((quote,index, array)=>{\n                        quote = array[array.length - 1 - index]\n                        const departure = quote.OutboundLeg;\n                        const returnInfo = quote.InboundLeg;\n                        return (\n                            <ListGroup.Item key={index} className=\"py-2\">\n                                <Row >\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\"> Departure Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(departure.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p>{origin.SkyscannerCode} to {destination.SkyscannerCode}</p>: <></>} */}\n                                        <p>{origin} to {destination} </p>  \n                                    </Col>\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\">Return Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(returnInfo.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p>{destination.SkyscannerCode} to {origin.SkyscannerCode}</p>: <></>} */}\n                                        <p> {destination} to {origin} </p>\n                                    </Col>\n                                    <Col xl={2} className=\"text-center\">\n                                        {quote.MinPrice}\n                                        {currency ? <span> {currency[0].Code}</span>:<></>}\n                                    </Col>\n                                </Row>      \n                            </ListGroup.Item>\n                        )\n                    })): <></>}\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default Places;","const currencies = [\n  \"AED\",\n  \"AFN\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"AOA\",\n  \"ARS\",\n  \"AUD\",\n  \"AWG\",\n  \"AZN\",\n  \"BAM\",\n  \"BBD\",\n  \"BDT\",\n  \"BGN\",\n  \"BHD\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"BOB\",\n  \"BRL\",\n  \"BSD\",\n  \"BTC\",\n  \"BTN\",\n  \"BWP\",\n  \"BYN\",\n  \"BZD\",\n  \"CAD\",\n  \"CDF\",\n  \"CHF\",\n  \"CLF\",\n  \"CLP\",\n  \"CNH\",\n  \"CNY\",\n  \"COP\",\n  \"CRC\",\n  \"CUC\",\n  \"CUP\",\n  \"CVE\",\n  \"CZK\",\n  \"DJF\",\n  \"DKK\",\n  \"DOP\",\n  \"DZD\",\n  \"EGP\",\n  \"ERN\",\n  \"ETB\",\n  \"EUR\",\n  \"FJD\",\n  \"FKP\",\n  \"GBP\",\n  \"GEL\",\n  \"GGP\",\n  \"GHS\",\n  \"GIP\",\n  \"GMD\",\n  \"GNF\",\n  \"GTQ\",\n  \"GYD\",\n  \"HKD\",\n  \"HNL\",\n  \"HRK\",\n  \"HTG\",\n  \"HUF\",\n  \"IDR\",\n  \"ILS\",\n  \"IMP\",\n  \"INR\",\n  \"IQD\",\n  \"IRR\",\n  \"ISK\",\n  \"JEP\",\n  \"JMD\",\n  \"JOD\",\n  \"JPY\",\n  \"KES\",\n  \"KGS\",\n  \"KHR\",\n  \"KMF\",\n  \"KPW\",\n  \"KRW\",\n  \"KWD\",\n  \"KYD\", \n  \"KZT\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"MAD\",\n  \"MDL\",\n  \"MGA\",\n  \"MKD\",\n  \"MMK\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MRU\",\n  \"MUR\",\n  \"MVR\",\n  \"MWK\",\n  \"MXN\",\n  \"MYR\",\n  \"MZN\",\n  \"NAD\",\n  \"NGN\",\n  \"NIO\",\n  \"NOK\",\n  \"NPR\",\n  \"NZD\",\n  \"OMR\",\n  \"PAB\",\n  \"PEN\",\n  \"PGK\",\n  \"PHP\",\n  \"PKR\",\n  \"PLN\",\n  \"PYG\",\n  \"QAR\",\n  \"RON\",\n  \"RSD\",\n  \"RUB\",\n  \"RWF\",\n  \"SAR\",\n  \"SBD\",\n  \"SCR\",\n  \"SDG\",\n  \"SEK\",\n  \"SGD\",\n  \"SHP\",\n  \"SLL\",\n  \"SOS\",\n  \"SRD\",\n  \"SSP\",\n  \"STD\",\n  \"STN\",\n  \"SVC\",\n  \"SYP\",\n  \"SZL\",\n  \"THB\",\n  \"TJS\",\n  \"TMT\",\n  \"TND\",\n  \"TOP\",\n  \"TRY\",\n  \"TTD\",\n  \"TWD\",\n  \"TZS\",\n  \"UAH\",\n  \"UGX\",\n  \"USD\",\n  \"UYU\",\n  \"UZS\",\n  \"VEF\",\n  \"VND\",\n  \"VUV\",\n  \"WST\",\n  \"XAF\",\n  \"XAG\",\n  \"XAU\",\n  \"XCD\",\n  \"XDR\",\n  \"XOF\",\n  \"XPD\",\n  \"XPF\",\n  \"XPT\",\n  \"YER\",\n  \"ZAR\",\n  \"ZMW\",\n  \"ZWL\"\n]\nexport default currencies;","import React, {useState} from 'react';\nimport './AirportInfo.css';\nimport Places from \"./Places\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport currencies from \"../data/currencies\";\n\nfunction AirportInfo() { \n    //GETTING THE DATE FOR TODAY AND TOMORROW\n    let today = new Date();\n    let tomorrow = new Date(today);\n    today = today.toISOString().split('T')[0];\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    tomorrow = tomorrow.toISOString().split('T')[0];\n\n    //INPUT VALUES\n    const [currency, setCurrency] = useState(currencies[0]);\n    const [whereFrom, setWhereFrom] = useState(\"\");\n    const [whereTo, setWhereTo] = useState(\"\");\n    const [deperatureDate, setDepartureDate] = useState(today);\n    const [returnDate, setReturnDate] = useState(tomorrow);\n\n    //Values based on our search results\n    const [showResults,setShowResults] = useState(false)\n    const [places, setPlaces] = useState([])\n    const [currentCurrency, setCurrentCurrency] = useState([])\n    const [quotes, setQuotes] = useState([]);\n    const [error, setError] = useState(false);\n\n    const [origin, setOrigin] = useState(\"\");\n    const [destination, setDestination] = useState(\"\");\n   \n    const searchForFlights = (e)=>{\n        e.preventDefault();\n\n        //ORIGIN PLACE\n        async function fetchDepartureAirport(){\n            try{\n                let query = whereFrom.split(' ').join('&');\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": \"f1645d5175mshecf9c3221481c5ep1addd7jsn6adcb6fc523c\",\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${query}`, reqOptions)\n                response = await response.json()\n                console.log(response);\n            }\n            catch(err){\n                console.log(err);\n            }\n        }\n        fetchDepartureAirport();\n        //DESTINATION PLACE\n        async function fetchArrivalAirport(){\n            try{\n                let query = whereTo.split(' ').join('&');\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": \"f1645d5175mshecf9c3221481c5ep1addd7jsn6adcb6fc523c\",\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${query}`, reqOptions)\n                response = await response.json()\n                console.log(response);\n            }\n            catch(err){\n                console.log(err);\n            }\n        }\n        fetchArrivalAirport();\n\n        \n        async function fetchMyAPI() {\n            try{\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": \"f1645d5175mshecf9c3221481c5ep1addd7jsn6adcb6fc523c\",\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/us/${currency}/en-us/${whereFrom}/${whereTo}/${deperatureDate}/${returnDate}`, reqOptions)\n                response = await response.json()\n                // setSearchResult(response);\n                setQuotes(response.Quotes)\n                setCurrentCurrency(response.Currencies)\n                setPlaces(response.Places)\n                console.log(response)\n                setShowResults(true);\n                setError(false);\n                \n            }\n            catch(err){\n                console.log(err);\n                setShowResults(false);\n                setError(true);\n            }\n        }\n        fetchMyAPI(); \n        \n        setOrigin(whereFrom);\n        setDestination(whereTo);\n        setWhereFrom(\"\");\n        setWhereTo(\"\");\n        setDepartureDate(today);\n        setReturnDate(tomorrow);\n    }\n    \n    \n    return(\n        <div className=\"container-fluid py-4\">\n            <h1 className=\"text-center pt-4\">Search for Flights </h1>\n            <Form id=\"flight-form\" className=\"w-75 mx-auto py-2 container-fluid\">\n                <Row>\n                    <Col xl={2} lg={2}>\n                        <label>Currency</label>\n                        <Form.Group>\n                            <Form.Control as=\"select\" id=\"currencies\" value={currency} onChange= {(e)=> setCurrency(e.target.value)} custom>\n                                {currencies.map((currencyOption,index)=>{\n                                    return(\n                                        <option key={index}>{currencyOption}</option>\n                                    )\n                                })}\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xl={3} lg={3}>\n                        <Form.Control id=\"where-from\" placeholder=\"Where from?\" value={whereFrom} onChange={(e)=> setWhereFrom(e.target.value) }/>\n                        <div id=\"where-from-invalid\" className=\"invalid-feedback\">You entered an empty location!</div>\n                    </Col>\n                    <Col xl={3} lg={3}>\n                        <Form.Control id=\"where-to\" placeholder=\"Where to?\" value={whereTo} onChange={(e)=> setWhereTo(e.target.value) }/>\n                        <div id=\"where-to-invalid\" className=\"invalid-feedback\">You entered an empty location!</div>\n                    </Col>\n                    <Col xl={3} lg={3}>\n                        <Form.Control id=\"departure-date\" type=\"date\" placeholder=\"Departure Date (yy-mm-dd)\" value={deperatureDate} onChange={(e)=> setDepartureDate(e.target.value) }/>\n                        <div id=\"departure-date-nvalid\" className=\"invalid-feedback\">You entered an empty deperature date!</div>\n                    </Col>\n                    <Col xl={3} lg={3}>\n                        <Form.Control id=\"return-date\" type=\"date\" placeholder=\"Return Date (yy-mm-dd)\" value={returnDate} onChange={(e)=> setReturnDate(e.target.value) }/>\n                        <div id=\"return-date-invalid\" className=\"invalid-feedback\">You entered an empty return date!</div>\n                    </Col>\n                </Row>\n                <Row className=\"justify-content-center pt-4\">\n                    <Button type=\"submit\" onClick={searchForFlights} className=\"rounded-pill px-4\">Search</Button>\n                </Row>\n            </Form>\n\n            { showResults ? (\n                    <Places quotes={quotes} currency={currentCurrency} origin={origin} destination = {destination} places={places} error={error}></Places> \n                )\n                : <></>\n                \n            }\n        </div>\n    )\n}\n\nexport default AirportInfo;\n","import React from 'react';\n\nfunction Footer(props) { \n    return(\n        <div className=\" bg-dark py-3 text-white text-center\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from \"./components/Header\";\nimport AirportInfo from \"./components/AirportInfo\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header title=\"Flights\"/>\n      <AirportInfo/>\n      \n      <Footer title=\"2021\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}