{"version":3,"sources":["components/Header.js","components/Places.js","data/currencies.js","components/AirportInfo.js","components/Footer.js","App.js","index.js"],"names":["Header","props","Navbar","variant","bg","className","Brand","href","title","Places","useState","sort","setSort","quotes","currency","origin","toUpperCase","destination","length","Form","Group","Label","Control","as","id","value","onChange","e","target","custom","ListGroup","map","quote","index","departure","OutboundLeg","returnInfo","InboundLeg","Item","Row","Col","xl","Date","parse","DepartureDate","toLocaleString","split","substring","MinPrice","Code","array","currencies","API_KEY","process","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","option","fontSize","marginRight","textField","marginLeft","width","AirportInfo","classes","today","tomorrow","toISOString","setDate","getDate","setCurrency","whereFrom","setWhereFrom","whereFromList","setWhereFromList","whereTo","setWhereTo","whereToList","deperatureDate","setDepartureDate","returnDate","setReturnDate","showResults","setShowResults","places","setPlaces","currentCurrency","setCurrentCurrency","setQuotes","error","setError","whereFromCity","setWhereFromCity","whereToCity","setWhereToCity","setOrigin","setDestination","originTimeOut","setOriginTimeOut","Grid","container","item","currencyOption","Autocomplete","inputValue","event","console","log","v","PlaceId","PlaceName","options","getOptionLabel","getOptionSelected","renderOption","key","col","renderInput","params","TextField","label","startLocation","a","query","join","reqOptions","method","headers","fetch","response","json","trim","fetchDepartureAirport","getOriginPlaces","xs","type","placeholder","Button","onClick","Quotes","Currencies","preventDefault","fetchMyAPI","document","getElementById","Footer","App","ReactDOM","render","StrictMode"],"mappings":"mPAWeA,MARf,SAAgBC,GACZ,OACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,GAAG,OAAOC,UAAU,aAA3C,SACI,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,IAAnB,SAAwBN,EAAMO,W,uFC8F3BC,MA7Ff,SAAgBR,GAAQ,IAAD,EACKS,mBAAS,eADd,mBACZC,EADY,KACNC,EADM,KAGfC,EAASZ,EAAMY,OACfC,EAAWb,EAAMa,SAGjBC,EAASd,EAAMc,OAAOC,cACtBC,EAAchB,EAAMgB,YAAYD,cAMpC,OAEI,sBAAKX,UAAU,4BAAf,UACQ,sBAAKA,UAAU,OAAf,UAEKQ,EAASA,EAAOK,OAAS,EAF9B,WAGI,cAACC,EAAA,EAAD,CAAMd,UAAU,OAAhB,SACI,eAACc,EAAA,EAAKC,MAAN,WACI,cAACD,EAAA,EAAKE,MAAN,6BACA,eAACF,EAAA,EAAKG,QAAN,CAAcC,GAAG,SAASC,GAAG,aAAaC,MAAOd,EAAMe,SAAU,SAACC,GAAD,OAAMf,EAAQe,EAAEC,OAAOH,QAAQI,QAAM,EAAtG,UACI,iDACA,4DAQpB,cAACC,EAAA,EAAD,UACY,gBAAPnB,GAAwBE,EACpBA,EAAOkB,KAAI,SAACC,EAAMC,GACf,IAAMC,EAAYF,EAAMG,YAClBC,EAAaJ,EAAMK,WACzB,OACI,cAACP,EAAA,EAAUQ,KAAX,CAA4BjC,UAAU,OAAtC,SACI,eAACkC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,mBAAGpC,UAAU,wBAAb,8BACA,mBAAGA,UAAU,OAAb,SAAqB,IAAIqC,KAAKA,KAAKC,MAAMT,EAAUU,gBAAgBC,iBAAiBC,MAAM,KAAK,KAE/F,8BAAI/B,EAAOgC,UAAU,EAAGhC,EAAOG,OAAS,GAAxC,OAAgDD,EAAY8B,UAAU,EAAG9B,EAAYC,OAAS,GAA9F,UAEJ,eAACsB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,mBAAGpC,UAAU,wBAAb,0BACA,mBAAGA,UAAU,OAAb,SAAqB,IAAIqC,KAAKA,KAAKC,MAAMP,EAAWQ,gBAAgBC,iBAAiBC,MAAM,KAAK,KAEhG,kCAAK7B,EAAY8B,UAAU,EAAG9B,EAAYC,OAAS,GAAnD,OAA2DH,EAAOgC,UAAU,EAAGhC,EAAOG,OAAS,GAA/F,UAEJ,eAACsB,EAAA,EAAD,CAAKC,GAAI,EAAGpC,UAAU,cAAtB,UACK2B,EAAMgB,SACNlC,EAAW,qCAAQA,EAAS,GAAGmC,QAAa,oCAhBpChB,MAqBvBpB,EACLA,EAAOkB,KAAI,SAACC,EAAMC,EAAOiB,GAEtB,IAAMhB,GADNF,EAAQkB,EAAMA,EAAMhC,OAAS,EAAIe,IACTE,YAClBC,EAAaJ,EAAMK,WACzB,OACI,cAACP,EAAA,EAAUQ,KAAX,CAA4BjC,UAAU,OAAtC,SACI,eAACkC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,mBAAGpC,UAAU,wBAAb,8BACA,mBAAGA,UAAU,OAAb,SAAqB,IAAIqC,KAAKA,KAAKC,MAAMT,EAAUU,gBAAgBC,iBAAiBC,MAAM,KAAK,KAE/F,8BAAI/B,EAAJ,OAAgBE,EAAhB,UAEJ,eAACuB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,mBAAGpC,UAAU,wBAAb,0BACA,mBAAGA,UAAU,OAAb,SAAqB,IAAIqC,KAAKA,KAAKC,MAAMP,EAAWQ,gBAAgBC,iBAAiBC,MAAM,KAAK,KAEhG,kCAAK7B,EAAL,OAAsBF,EAAtB,UAEJ,eAACyB,EAAA,EAAD,CAAKC,GAAI,EAAGpC,UAAU,cAAtB,UACK2B,EAAMgB,SACNlC,EAAW,qCAAQA,EAAS,GAAGmC,QAAa,oCAhBpChB,MAqBxB,mC,QC8EVkB,EA5KI,CACjoCCjJIC,G,MAAUC,sDAGVC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXC,MAAOP,EAAMQ,QAAQC,KAAKC,WAE5BC,OAAQ,CACNC,SAAU,GACV,WAAY,CACVC,YAAa,EACbD,SAAU,KAGdE,UAAW,CACTC,WAAYf,EAAMK,QAAQ,GAC1BQ,YAAab,EAAMK,QAAQ,GAC3BW,MAAO,SAyUIC,MArUf,WACI,IAAMC,EAAUpB,IAEZqB,EAAQ,IAAIjC,KACZkC,EAAW,IAAIlC,KAAKiC,GACxBA,EAAQA,EAAME,cAAc/B,MAAM,KAAK,GACvC8B,EAASE,QAAQF,EAASG,UAAY,GACtCH,EAAWA,EAASC,cAAc/B,MAAM,KAAK,GAP1B,MAUapC,mBAASyC,EAAW,IAVjC,mBAUZrC,EAVY,KAUFkE,EAVE,OAWetE,mBAAS,IAXxB,mBAWZuE,EAXY,KAWDC,EAXC,OAYuBxE,mBAAS,IAZhC,mBAYZyE,EAZY,KAYGC,EAZH,OAaW1E,mBAAS,IAbpB,mBAaZ2E,EAbY,KAaHC,EAbG,OAcmB5E,mBAAS,IAd5B,mBAcZ6E,EAdY,aAewB7E,mBAASiE,IAfjC,mBAeZa,EAfY,KAeIC,EAfJ,OAgBiB/E,mBAASkE,GAhB1B,mBAgBZc,EAhBY,KAgBAC,EAhBA,OAmBkBjF,oBAAS,GAnB3B,mBAmBZkF,EAnBY,KAmBAC,EAnBA,OAoBSnF,mBAAS,IApBlB,mBAoBZoF,EApBY,KAoBJC,EApBI,OAqB2BrF,mBAAS,IArBpC,oBAqBZsF,GArBY,MAqBKC,GArBL,SAsBSvF,mBAAS,IAtBlB,qBAsBZG,GAtBY,MAsBJqF,GAtBI,SAuBOxF,oBAAS,GAvBhB,qBAuBZyF,GAvBY,MAuBLC,GAvBK,SAwBuB1F,mBAAS,IAxBhC,qBAwBZ2F,GAxBY,MAwBGC,GAxBH,SAyBmB5F,mBAAS,IAzB5B,qBAyBZ6F,GAzBY,MAyBCC,GAzBD,SA4BS9F,mBAAS,IA5BlB,qBA4BZK,GA5BY,MA4BJ0F,GA5BI,SA6BmB/F,mBAAS,IA7B5B,qBA6BZO,GA7BY,MA6BCyF,GA7BD,SAgCuBhG,mBAAS,GAhChC,qBAgCZiG,GAhCY,MAgCGC,GAhCH,SAiCiClG,mBAAS,GAjC1C,qBAiKnB,OAjKmB,YAkKf,sBAAKL,UAAU,uBAAf,UACI,oBAAIA,UAAU,mBAAd,iCAEA,qBAAKA,UAAWqE,EAAQjB,KAAxB,SACI,eAACoD,EAAA,EAAD,CAAMC,WAAS,EAACjD,QAAS,EAAGxD,UAAU,eAAtC,UACI,cAACwG,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACtE,GAAI,GAAIoB,QAAS,EAAtC,SACI,eAACgD,EAAA,EAAD,CAAME,MAAI,EAACtE,GAAI,EAAf,UACI,6CACA,cAACtB,EAAA,EAAKG,QAAN,CAAcC,GAAG,SAASC,GAAG,aAAaC,MAAOX,EAAUY,SAAW,SAACC,GAAD,OAAMqD,EAAYrD,EAAEC,OAAOH,QAAQI,QAAM,EAA/G,SACSsB,EAAWpB,KAAI,SAACiF,EAAe/E,GAC5B,OACI,iCAAqB+E,GAAR/E,aAMrC,eAAC4E,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACtE,GAAI,GAAIoB,QAAS,EAAtC,UACI,cAACgD,EAAA,EAAD,CAAME,MAAI,EAACtE,GAAI,EAAGpC,UAAU,OAA5B,SACI,cAAC4G,EAAA,EAAD,CACIzF,GAAG,aAEH0F,WAAcb,GACd3E,SAAU,SAACyF,EAAO1F,GAEd,GADA2F,QAAQC,IAAI5F,GACRA,EAAM,CACN,IAAI6F,EAAI7F,EAAM8F,QACdrC,EAAaoC,GACbhB,GAAiB7E,EAAM+F,aAI/BC,QAAStC,EACTT,QAAS,CACLP,OAAQO,EAAQP,QAGpBuD,eAAgB,SAACvD,GAAD,OAAYA,EAAOqD,WACnCG,kBAAmB,SAACxD,EAAQ1C,GAAT,OAAmB0C,EAAOqD,YAAc/F,EAAM+F,WACjEI,aAAc,SAACzD,EAAO0D,GAAR,OACV,qBAAexH,UAAU,kBAAzB,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAMA,UAAU,SAAhB,SAA0B8D,EAAOqD,YACjC,sBAAMM,IAAI,QAAV,SAAmB3D,EAAOoD,QAAQxE,UAAU,EAAGoB,EAAOoD,QAAQrG,OAAS,SAHrE2G,IAQdE,YAAa,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,yBACIzG,GAAG,kBACCwG,GAFR,IAGIE,MAAM,aACN/H,QAAQ,WACRsB,MAAOwD,EACPvD,SAAU,SAACC,GACPuD,EAAavD,EAAEC,OAAOH,OACtB6E,GAAiB3E,EAAEC,OAAOH,OAC1BmF,GAAiBD,GAAc,GAC3BA,GAAc,IAAK,GA1LvC,SAAChF,GAErB,IAAIwG,EAAgBxG,EAAEC,OAAOH,MAFH,4CAG1B,gCAAA2G,EAAA,sEAEYC,EAAQF,EAAcrF,MAAM,KAAKwF,KAAK,KACpCC,EAAa,CACfC,OAAQ,MACRC,QAAS,CACL,iBAAiB,GAAjB,OAAqBrF,GACrB,kBAAmB,wDACnB,gBAAkB,IARlC,SAW6BsF,MAAM,kHAAD,OAAmHL,GAASE,GAX9J,cAWYI,EAXZ,gBAYyBA,EAASC,OAZlC,OAYQD,EAZR,OAaQvB,QAAQC,IAAIsB,GACZvD,EAAiBuD,EAASlI,QAdlC,kDAiBQ2G,QAAQC,IAAR,MAjBR,2DAH0B,sBAuBtBc,GACKA,EAAcU,OAAO3H,OAAS,GAxBb,mCAyBlB4H,GAkKgCC,CAAgBpH,YAmBxC,cAACkF,EAAA,EAAD,CAAME,MAAI,EAACtE,GAAI,EAAGpC,UAAU,OAA5B,SACI,cAAC4G,EAAA,EAAD,CACIzF,GAAG,WAEH0F,WAAcX,GACd7E,SAAU,SAACyF,EAAO1F,GACd,GAAIA,EAAM,CACN,IAAI6F,EAAI7F,EAAM8F,QACdjC,EAAWgC,GACXd,GAAe/E,EAAM+F,aAI7BC,QAASlC,EACTb,QAAS,CACLP,OAAQO,EAAQP,QAGpBuD,eAAgB,SAACvD,GAAD,OAAYA,EAAOqD,WACnCG,kBAAmB,SAACxD,EAAQ1C,GAAT,OAAmB0C,EAAOqD,YAAc/F,EAAM+F,WACjEI,aAAc,SAACzD,EAAO0D,GAAR,OACV,qBAAexH,UAAU,kBAAzB,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAMA,UAAU,SAAhB,SAA0B8D,EAAOqD,YACjC,sBAAMM,IAAI,QAAV,SAAmB3D,EAAOoD,QAAQxE,UAAU,EAAGoB,EAAOoD,QAAQrG,OAAS,SAHrE2G,IAQdE,YAAa,SAACC,GAAD,OACT,cAACC,EAAA,EAAD,yBACIzG,GAAG,eACCwG,GAFR,IAGIE,MAAM,WACN/H,QAAQ,WACRsB,MAAO4D,EACP3D,SAAU,SAACC,GACP2D,EAAW3D,EAAEC,OAAOH,OACpB+E,GAAe7E,EAAEC,OAAOH,gBAS5C,eAACoF,EAAA,EAAD,CAAME,MAAI,EAACiC,GAAI,EAAf,UACI,cAAC7H,EAAA,EAAKG,QAAN,CAAcjB,UAAU,OAAOF,QAAQ,WAAWqB,GAAG,iBAAiByH,KAAK,OAAOC,YAAY,4BAA4BzH,MAAO+D,EAAgB9D,SAAU,SAACC,GAAD,OAAM8D,EAAiB9D,EAAEC,OAAOH,UAC3L,qBAAKD,GAAG,wBAAwBnB,UAAU,mBAA1C,sDAEJ,eAACwG,EAAA,EAAD,CAAME,MAAI,EAACiC,GAAI,EAAf,UACI,cAAC7H,EAAA,EAAKG,QAAN,CAAcjB,UAAU,OAAOmB,GAAG,cAAcyH,KAAK,OAAOC,YAAY,yBAAyBzH,MAAOiE,EAAYhE,SAAU,SAACC,GAAD,OAAMgE,EAAchE,EAAEC,OAAOH,UAC3J,qBAAKD,GAAG,sBAAsBnB,UAAU,mBAAxC,qDAGR,cAACwG,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACtE,GAAI,GAAIoB,QAAS,EAAGxD,UAAU,iCAAnD,SACI,cAAC8I,EAAA,EAAD,CAAQF,KAAK,SAASG,QAtMjB,SAACzH,GAAI,4CAG1B,8BAAAyG,EAAA,6DACIhB,QAAQC,IAAIpC,GACZmC,QAAQC,IAAIhC,GAFhB,SAIckD,EAAa,CACfC,OAAQ,MACRC,QAAS,CACL,iBAAiB,GAAjB,OAAqBrF,GACrB,kBAAmB,wDACnB,gBAAkB,IATlC,SAqB6BsF,MAAM,iGAAD,OAAkG5H,EAAlG,kBAAoHmE,EAApH,YAAiII,EAAjI,YAA4IG,EAA5I,YAA8JE,GAAc6C,GArB9M,cAqBYI,EArBZ,OAuBQvB,QAAQC,IAAR,yGAA8GvG,EAA9G,kBAAgImE,EAAhI,YAA6II,EAA7I,YAAwJG,EAAxJ,YAA0KE,IAvBlL,UAwByBiD,EAASC,OAxBlC,QAwBQD,EAxBR,OA0BQzC,GAAUyC,EAASU,QACnBpD,GAAmB0C,EAASW,YAC5BvD,EAAU4C,EAASlI,QACnB2G,QAAQC,IAAIsB,GACZ9C,GAAe,GACfO,IAAS,GA/BjB,kDAmCQgB,QAAQC,IAAR,MACAxB,GAAe,GACfO,IAAS,GArCjB,2DAH0B,sBAC1BzE,EAAE4H,iBA0CsB,IAAnBtE,EAAU/D,QAAiC,IAAjBmE,EAAQnE,UA3Cb,mCA4CtBsI,GAEA/C,GAAUxB,GACVyB,GAAerB,GACfH,EAAa,IACboB,GAAiB,IACjBhB,EAAW,IACXkB,GAAe,IACff,EAAiBd,GACjBgB,EAAcf,GACdwC,QAAQC,IAAIoC,SAASC,eAAe,eACpCD,SAASC,eAAe,cAAcjI,MAAQ,KA+IepB,UAAU,oBAA3D,2BAgBVuF,EACM,cAAC,EAAD,CAAQ/E,OAAQA,GAAQC,SAAUkF,GAAiBjF,OAAQA,GAAQE,YAAeA,GAAa6E,OAAQA,EAAQK,MAAOA,KAExH,iCCtWHwD,MARf,SAAgB1J,GACZ,OACI,qBAAKI,UAAU,uCAAf,SACKJ,EAAMO,SCWJoJ,MAXf,WACE,OACE,gCACE,cAAC,EAAD,CAAQpJ,MAAM,YACd,cAAC,EAAD,IAEA,cAAC,EAAD,CAAQA,MAAM,a,MCLpBqJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASC,eAAe,W","file":"static/js/main.ad3b0be6.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\n\nfunction Header(props) { \n    return (\n        <Navbar variant=\"dark\" bg=\"dark\" className=\"px-5 py-3 \">\n            <Navbar.Brand href=\"/\">{props.title}</Navbar.Brand>\n        </Navbar>\n    )\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport './Places.css';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Places(props) { \n    const [sort, setSort] = useState(\"Low To High\");\n\n    let quotes = props.quotes;\n    let currency = props.currency;\n\n    \n    let origin = props.origin.toUpperCase();\n    let destination = props.destination.toUpperCase();\n\n    \n\n\n\n    return (\n        \n        <div className=\"container-fluid w-75 py-4\">\n                <div className=\"w-25\">\n                    \n                    {quotes ? quotes.length : 0} results\n                    <Form className=\"py-2\">\n                        <Form.Group>\n                            <Form.Label>Sort by Price:</Form.Label>\n                            <Form.Control as=\"select\" id=\"currencies\" value={sort} onChange={(e)=> setSort(e.target.value)} custom>\n                                <option>Low To High</option>\n                                <option>High To Low</option>\n                            </Form.Control>\n                        </Form.Group>\n                \n                    </Form>\n                </div>\n            \n            \n            <ListGroup>\n                {sort===\"Low To High\" && quotes ? \n                    (quotes.map((quote,index)=>{\n                        const departure = quote.OutboundLeg;\n                        const returnInfo = quote.InboundLeg;\n                        return (\n                            <ListGroup.Item key={index} className=\"py-2\">\n                                <Row >\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\"> Departure Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(departure.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p>{destination.SkyscannerCode} to {origin.SkyscannerCode} </p>: <></>} */}\n                                        <p>{origin.substring(0, origin.length - 4)} to {destination.substring(0, destination.length - 4)} </p>\n                                    </Col>\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\">Return Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(returnInfo.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p> {origin.SkyscannerCode} to {destination.SkyscannerCode} </p>: <></>} */}\n                                        <p> {destination.substring(0, destination.length - 4)} to {origin.substring(0, origin.length - 4)} </p>\n                                    </Col>\n                                    <Col xl={2} className=\"text-center\">\n                                        {quote.MinPrice}\n                                        {currency ? <span> {currency[0].Code}</span>:<></>}\n                                    </Col>\n                                </Row>      \n                            </ListGroup.Item>\n                        )\n                    }) ): quotes ?\n                    (quotes.map((quote,index, array)=>{\n                        quote = array[array.length - 1 - index]\n                        const departure = quote.OutboundLeg;\n                        const returnInfo = quote.InboundLeg;\n                        return (\n                            <ListGroup.Item key={index} className=\"py-2\">\n                                <Row >\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\"> Departure Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(departure.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p>{origin.SkyscannerCode} to {destination.SkyscannerCode}</p>: <></>} */}\n                                        <p>{origin} to {destination} </p>  \n                                    </Col>\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\">Return Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(returnInfo.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        {/* {destination && origin ? <p>{destination.SkyscannerCode} to {origin.SkyscannerCode}</p>: <></>} */}\n                                        <p> {destination} to {origin} </p>\n                                    </Col>\n                                    <Col xl={2} className=\"text-center\">\n                                        {quote.MinPrice}\n                                        {currency ? <span> {currency[0].Code}</span>:<></>}\n                                    </Col>\n                                </Row>      \n                            </ListGroup.Item>\n                        )\n                    })): <></>}\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default Places;","const currencies = [\n  \"AED\",\n  \"AFN\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"AOA\",\n  \"ARS\",\n  \"AUD\",\n  \"AWG\",\n  \"AZN\",\n  \"BAM\",\n  \"BBD\",\n  \"BDT\",\n  \"BGN\",\n  \"BHD\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"BOB\",\n  \"BRL\",\n  \"BSD\",\n  \"BTC\",\n  \"BTN\",\n  \"BWP\",\n  \"BYN\",\n  \"BZD\",\n  \"CAD\",\n  \"CDF\",\n  \"CHF\",\n  \"CLF\",\n  \"CLP\",\n  \"CNH\",\n  \"CNY\",\n  \"COP\",\n  \"CRC\",\n  \"CUC\",\n  \"CUP\",\n  \"CVE\",\n  \"CZK\",\n  \"DJF\",\n  \"DKK\",\n  \"DOP\",\n  \"DZD\",\n  \"EGP\",\n  \"ERN\",\n  \"ETB\",\n  \"EUR\",\n  \"FJD\",\n  \"FKP\",\n  \"GBP\",\n  \"GEL\",\n  \"GGP\",\n  \"GHS\",\n  \"GIP\",\n  \"GMD\",\n  \"GNF\",\n  \"GTQ\",\n  \"GYD\",\n  \"HKD\",\n  \"HNL\",\n  \"HRK\",\n  \"HTG\",\n  \"HUF\",\n  \"IDR\",\n  \"ILS\",\n  \"IMP\",\n  \"INR\",\n  \"IQD\",\n  \"IRR\",\n  \"ISK\",\n  \"JEP\",\n  \"JMD\",\n  \"JOD\",\n  \"JPY\",\n  \"KES\",\n  \"KGS\",\n  \"KHR\",\n  \"KMF\",\n  \"KPW\",\n  \"KRW\",\n  \"KWD\",\n  \"KYD\", \n  \"KZT\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"MAD\",\n  \"MDL\",\n  \"MGA\",\n  \"MKD\",\n  \"MMK\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MRU\",\n  \"MUR\",\n  \"MVR\",\n  \"MWK\",\n  \"MXN\",\n  \"MYR\",\n  \"MZN\",\n  \"NAD\",\n  \"NGN\",\n  \"NIO\",\n  \"NOK\",\n  \"NPR\",\n  \"NZD\",\n  \"OMR\",\n  \"PAB\",\n  \"PEN\",\n  \"PGK\",\n  \"PHP\",\n  \"PKR\",\n  \"PLN\",\n  \"PYG\",\n  \"QAR\",\n  \"RON\",\n  \"RSD\",\n  \"RUB\",\n  \"RWF\",\n  \"SAR\",\n  \"SBD\",\n  \"SCR\",\n  \"SDG\",\n  \"SEK\",\n  \"SGD\",\n  \"SHP\",\n  \"SLL\",\n  \"SOS\",\n  \"SRD\",\n  \"SSP\",\n  \"STD\",\n  \"STN\",\n  \"SVC\",\n  \"SYP\",\n  \"SZL\",\n  \"THB\",\n  \"TJS\",\n  \"TMT\",\n  \"TND\",\n  \"TOP\",\n  \"TRY\",\n  \"TTD\",\n  \"TWD\",\n  \"TZS\",\n  \"UAH\",\n  \"UGX\",\n  \"USD\",\n  \"UYU\",\n  \"UZS\",\n  \"VEF\",\n  \"VND\",\n  \"VUV\",\n  \"WST\",\n  \"XAF\",\n  \"XAG\",\n  \"XAU\",\n  \"XCD\",\n  \"XDR\",\n  \"XOF\",\n  \"XPD\",\n  \"XPF\",\n  \"XPT\",\n  \"YER\",\n  \"ZAR\",\n  \"ZMW\",\n  \"ZWL\"\n]\nexport default currencies;","\nimport React, {useState} from 'react';\nimport './AirportInfo.css';\nimport Places from \"./Places\";\nimport Form from \"react-bootstrap/Form\";\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport currencies from \"../data/currencies\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n// import DateFnsUtils from '@date-io/date-fns';\n// import {\n//     MuiPickersUtilsProvider,\n//     KeyboardTimePicker,\n//     KeyboardDatePicker,\n//   } from '@material-ui/pickers';\n\nimport {DebounceInput} from 'react-debounce-input';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  option: {\n    fontSize: 12,\n    '& > span': {\n      marginRight: 0,\n      fontSize: 12,\n    },\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction AirportInfo() { \n    const classes = useStyles();\n    //GETTING THE DATE FOR TODAY AND TOMORROW\n    let today = new Date();\n    let tomorrow = new Date(today);\n    today = today.toISOString().split('T')[0];\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    tomorrow = tomorrow.toISOString().split('T')[0];\n\n    //INPUT VALUES\n    const [currency, setCurrency] = useState(currencies[0]);\n    const [whereFrom, setWhereFrom] = useState(\"\");\n    const [whereFromList, setWhereFromList] = useState([]);\n    const [whereTo, setWhereTo] = useState(\"\");\n    const [whereToList, setWhereToList] = useState([]);\n    const [deperatureDate, setDepartureDate] = useState(today);\n    const [returnDate, setReturnDate] = useState(tomorrow);\n\n    //Values based on our search results\n    const [showResults,setShowResults] = useState(false)\n    const [places, setPlaces] = useState([])\n    const [currentCurrency, setCurrentCurrency] = useState([])\n    const [quotes, setQuotes] = useState([]);\n    const [error, setError] = useState(false);\n    const [whereFromCity, setWhereFromCity] = useState(\"\");\n    const [whereToCity, setWhereToCity] = useState(\"\");\n\n\n    const [origin, setOrigin] = useState(\"\");\n    const [destination, setDestination] = useState(\"\");\n\n    //timeout \n    const [originTimeOut, setOriginTimeOut] = useState(0);\n    const [destinationTimeOut, setDestinationTimeOut] = useState(0);\n\n    const getOriginPlaces = (e) =>{\n        //ORIGIN PLACE\n        let startLocation = e.target.value;\n        async function fetchDepartureAirport(){\n            try{\n                let query = startLocation.split(' ').join('&');\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": `${API_KEY}`,\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${query}`, reqOptions)\n                response = await response.json()\n                console.log(response);\n                setWhereFromList(response.Places)\n            }\n            catch(err){\n                console.log(err);\n            }\n        }\n        if (startLocation){\n            if ( startLocation.trim().length > 0){\n                fetchDepartureAirport();\n            }\n            \n        }\n        \n    }\n\n    const getArrivalPlaces = (e) =>{\n        //ORIGIN PLACE\n        let arrivalLocation = e.target.value;\n        //DESTINATION PLACE\n        async function fetchArrivalAirport(){\n            try{\n                let query = arrivalLocation.split(' ').join('&');\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": `${API_KEY}`,\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${query}`, reqOptions)\n                response = await response.json()\n                console.log(response);\n                setWhereToList(response.Places);\n            }\n            catch(err){\n                console.log(err);\n            }\n        }\n        if (arrivalLocation){\n            if ( arrivalLocation.trim().length > 0){\n                fetchArrivalAirport();\n            }\n            \n        }\n        \n    }\n   \n    const searchForFlights = (e)=>{\n        e.preventDefault();\n        \n        async function fetchMyAPI() {\n            console.log(whereFrom);\n            console.log(whereTo)\n            try{\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": `${API_KEY}`,\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                \n                // const reqOptions = {\n                //     method: 'GET',\n                //     headers: {\n                //         \"x-rapidapi-key\": `${API_KEY}`,\n                //         \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                //         \"useQueryString\": true\n                //     }\n                // }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/${currency}/en-US/${whereFrom}/${whereTo}/${deperatureDate}/${returnDate}`, reqOptions)\n                //let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/us/${currency}/en-us/${whereFrom}/${whereTo}/${deperatureDate}/${returnDate}`, reqOptions)\n                console.log(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/us/${currency}/en-us/${whereFrom}/${whereTo}/${deperatureDate}/${returnDate}`)\n                response = await response.json()\n                // setSearchResult(response);\n                setQuotes(response.Quotes)\n                setCurrentCurrency(response.Currencies)\n                setPlaces(response.Places)\n                console.log(response)\n                setShowResults(true);\n                setError(false);\n                \n            }\n            catch(err){\n                console.log(err);\n                setShowResults(false);\n                setError(true);\n            }\n        }\n        if ((whereFrom.length!==0) && (whereTo.length!==0)){\n            fetchMyAPI(); \n        \n            setOrigin(whereFrom);\n            setDestination(whereTo);\n            setWhereFrom(\"\");\n            setWhereFromCity(\"\");\n            setWhereTo(\"\");\n            setWhereToCity(\"\");\n            setDepartureDate(today);\n            setReturnDate(tomorrow);\n            console.log(document.getElementById(\"where-from\"))\n            document.getElementById(\"where-from\").value = \"\";\n        }\n        \n    }\n    \n    \n    return(\n        <div className=\"container-fluid py-4\">\n            <h1 className=\"text-center pt-4\">Search for Flights </h1>\n            \n            <div className={classes.root}>\n                <Grid container spacing={4} className=\"w-75 mx-auto\">\n                    <Grid container item xl={12} spacing={2}>\n                        <Grid item xl={4}>\n                            <label>Currency</label>\n                            <Form.Control as=\"select\" id=\"currencies\" value={currency} onChange= {(e)=> setCurrency(e.target.value)} custom>\n                                    {currencies.map((currencyOption,index)=>{\n                                        return(\n                                            <option key={index}>{currencyOption}</option>\n                                        )\n                                    })}\n                            </Form.Control>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xl={12} spacing={2}>\n                        <Grid item xl={3} className=\"w-25\">\n                            <Autocomplete\n                                id=\"where-from\"  \n                                //value = {whereFrom}\n                                inputValue = {whereFromCity}\n                                onChange={(event, value) => {\n                                    console.log(value);\n                                    if (value){\n                                        let v = value.PlaceId\n                                        setWhereFrom(v)\n                                        setWhereFromCity(value.PlaceName)\n                                    }\n                                   \n                                }}\n                                options={whereFromList}\n                                classes={{\n                                    option: classes.option,\n                                }}\n                                //autoHighlight\n                                getOptionLabel={(option) => option.PlaceName}\n                                getOptionSelected={(option, value) => option.PlaceName === value.PlaceName }\n                                renderOption={(option,key) => (\n                                    <div key={key} className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <span className=\"col-10\">{option.PlaceName}</span>\n                                            <span col=\"col-2\">{option.PlaceId.substring(0, option.PlaceId.length - 4)}</span>\n                                        </div>\n                                    \n                                    </div>\n                                )}\n                                renderInput={(params) => (\n                                    <TextField\n                                        id=\"departure-date\"\n                                        {...params}\n                                        label=\"Where From\"\n                                        variant=\"outlined\"\n                                        value={whereFrom} \n                                        onChange={(e)=> {\n                                            setWhereFrom(e.target.value);\n                                            setWhereFromCity(e.target.value);\n                                            setOriginTimeOut(originTimeOut+1);\n                                            if (originTimeOut%2 ===0){\n                                                getOriginPlaces(e);\n                                            }\n                                            \n                                        }}\n                                        \n                                    />\n                                        // <DebounceInput\n                                        //     minLength={2}\n                                        //     debounceTimeout={300}\n                                        //     value={whereFrom} \n                                        //     onChange={(e)=> {\n                                        //         setWhereFrom(e.target.value);\n                                        //         setWhereFromCity(e.target.value);\n                                        //         getOriginPlaces(e);\n                                        //     }}\n                                        //      />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item xl={3} className=\"w-25\">\n                            <Autocomplete\n                                id=\"where-to\" \n                                //value = \"\"\n                                inputValue = {whereToCity}\n                                onChange={(event, value) => {\n                                    if (value){\n                                        let v = value.PlaceId\n                                        setWhereTo(v)\n                                        setWhereToCity(value.PlaceName)\n                                    }\n                                    \n                                }}\n                                options={whereToList}\n                                classes={{\n                                    option: classes.option,\n                                }}\n                                //autoHighlight\n                                getOptionLabel={(option) => option.PlaceName}\n                                getOptionSelected={(option, value) => option.PlaceName === value.PlaceName }\n                                renderOption={(option,key) => (\n                                    <div key={key} className=\"container-fluid\" >\n                                        <div className=\"row\">\n                                            <span className=\"col-10\">{option.PlaceName}</span>\n                                            <span col=\"col-2\">{option.PlaceId.substring(0, option.PlaceId.length - 4)}</span>\n                                        </div>\n                                    \n                                    </div>\n                                )}\n                                renderInput={(params) => (\n                                    <TextField\n                                        id=\"return-date\"\n                                        {...params}\n                                        label=\"Where To\"\n                                        variant=\"outlined\"\n                                        value={whereTo} \n                                        onChange={(e)=> {\n                                            setWhereTo(e.target.value);\n                                            setWhereToCity(e.target.value);\n                                            //getArrivalPlaces(e);\n                                        }}\n                                        \n                                    />\n                                )}\n                            />\n\n                        </Grid>\n                        <Grid item xs={3}>                            \n                            <Form.Control className=\"py-4\" variant=\"outlined\" id=\"departure-date\" type=\"date\" placeholder=\"Departure Date (yy-mm-dd)\" value={deperatureDate} onChange={(e)=> setDepartureDate(e.target.value) }/>\n                            <div id=\"departure-date-nvalid\" className=\"invalid-feedback\">You entered an empty deperature date!</div>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Form.Control className=\"py-4\" id=\"return-date\" type=\"date\" placeholder=\"Return Date (yy-mm-dd)\" value={returnDate} onChange={(e)=> setReturnDate(e.target.value) }/>\n                            <div id=\"return-date-invalid\" className=\"invalid-feedback\">You entered an empty return date!</div>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xl={12} spacing={2} className=\"mx-auto justify-content-center\">\n                        <Button type=\"submit\" onClick={searchForFlights} className=\"rounded-pill px-4\">Search</Button>\n                    </Grid>\n                    {/* <Grid container item xl={12} spacing={2} className=\"mx-auto justify-content-center\">\n                        <DebounceInput\n                            minLength={2}\n                            debounceTimeout={300}\n                            value={whereFrom} \n                            onChange={(e)=> {\n                                setWhereFrom(e.target.value);\n                                setWhereFromCity(e.target.value);\n                                getOriginPlaces(e);\n                            }}\n                        />\n                    </Grid> */}\n                </Grid>\n            </div>\n            { showResults ? (\n                    <Places quotes={quotes} currency={currentCurrency} origin={origin} destination = {destination} places={places} error={error}></Places> \n                )\n                : <></>\n                \n            }\n\n        </div>\n    )\n}\n\nexport default AirportInfo;\n","import React from 'react';\n\nfunction Footer(props) { \n    return(\n        <div className=\" bg-dark py-3 text-white text-center\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from \"./components/Header\";\nimport AirportInfo from \"./components/AirportInfo\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header title=\"Flights\"/>\n      <AirportInfo/>\n      \n      <Footer title=\"2021\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}