{"version":3,"sources":["components/Header.js","components/Places.js","data/currencies.js","components/AirportInfo.js","components/Footer.js","App.js","index.js"],"names":["Header","props","Navbar","variant","className","Brand","href","title","Places","useState","sort","setSort","quotes","currency","origin","toUpperCase","destination","length","Form","Group","Label","Control","as","id","value","onChange","e","target","custom","ListGroup","map","quote","index","departure","OutboundLeg","returnInfo","InboundLeg","Item","Row","Col","xl","Date","parse","DepartureDate","toLocaleString","split","substring","MinPrice","Code","array","currencies","API_KEY","process","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","option","fontSize","marginRight","textField","marginLeft","width","AirportInfo","classes","today","tomorrow","toISOString","setDate","getDate","setCurrency","whereFrom","setWhereFrom","whereFromList","setWhereFromList","whereTo","setWhereTo","whereToList","setWhereToList","deperatureDate","setDepartureDate","returnDate","setReturnDate","showResults","setShowResults","places","setPlaces","currentCurrency","setCurrentCurrency","setQuotes","error","setError","whereFromCity","setWhereFromCity","whereToCity","setWhereToCity","setOrigin","setDestination","originTimeOut","setOriginTimeOut","destinationTimeOut","setDestinationTimeOut","whereToError","setWhereToError","whereFromError","setWhereFromError","Grid","container","item","currencyOption","Autocomplete","inputValue","event","v","PlaceId","PlaceName","options","getOptionLabel","getOptionSelected","renderOption","key","col","renderInput","params","TextField","label","startLocation","a","query","join","reqOptions","method","headers","fetch","response","json","console","log","trim","fetchDepartureAirport","getOriginPlaces","arrivalLocation","fetchArrivalAirport","getArrivalPlaces","xs","type","placeholder","Button","onClick","Quotes","Currencies","preventDefault","fetchMyAPI","document","getElementById","Footer","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e748cc8e.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from \"react-bootstrap/Navbar\";\n\nfunction Header(props) { \n    return (\n        <Navbar variant=\"dark\" className=\"px-5 py-3 bg-black \">\n            <Navbar.Brand href=\"/\">{props.title}</Navbar.Brand>\n        </Navbar>\n    )\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport './Places.css';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Places(props) { \n    const [sort, setSort] = useState(\"Low To High\");\n\n    let quotes = props.quotes;\n    let currency = props.currency;\n    let origin = props.origin.toUpperCase();\n    let destination = props.destination.toUpperCase();\n    \n    return (\n        \n        <div className=\"container-fluid w-75 py-4\">\n                <div className=\"w-25\">\n                    \n                    {quotes ? quotes.length : 0} results\n                    <Form className=\"py-2\">\n                        <Form.Group>\n                            <Form.Label>Sort by Price:</Form.Label>\n                            <Form.Control as=\"select\" id=\"currencies\" value={sort} onChange={(e)=> setSort(e.target.value)} custom>\n                                <option>Low To High</option>\n                                <option>High To Low</option>\n                            </Form.Control>\n                        </Form.Group>\n                \n                    </Form>\n                </div>\n            \n            \n            <ListGroup>\n                {sort===\"Low To High\" && quotes ? \n                    (quotes.map((quote,index)=>{\n                        const departure = quote.OutboundLeg;\n                        const returnInfo = quote.InboundLeg;\n                        return (\n                            <ListGroup.Item key={index} className=\"py-2\">\n                                <Row >\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\"> Departure Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(departure.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        <p>{origin.substring(0, origin.length - 4)} to {destination.substring(0, destination.length - 4)} </p>\n                                    </Col>\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\">Return Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(returnInfo.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        <p> {destination.substring(0, destination.length - 4)} to {origin.substring(0, origin.length - 4)} </p>\n                                    </Col>\n                                    <Col xl={2} className=\"text-center\">\n                                        {quote.MinPrice}\n                                        {currency ? <span> {currency[0].Code}</span>:<></>}\n                                    </Col>\n                                </Row>      \n                            </ListGroup.Item>\n                        )\n                    }) ): quotes ?\n                    (quotes.map((quote,index, array)=>{\n                        quote = array[array.length - 1 - index]\n                        const departure = quote.OutboundLeg;\n                        const returnInfo = quote.InboundLeg;\n                        return (\n                            <ListGroup.Item key={index} className=\"py-2\">\n                                <Row >\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\"> Departure Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(departure.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        <p>{origin.substring(0, origin.length - 4)} to {destination.substring(0, destination.length - 4)} </p>                                    </Col>\n                                    <Col xl={5}>\n                                        <p className=\"my-0 font-weight-bold\">Return Date:</p>\n                                        <p className=\"my-0\">{new Date(Date.parse(returnInfo.DepartureDate)).toLocaleString().split(',')[0]}</p>\n                                        <p> {destination.substring(0, destination.length - 4)} to {origin.substring(0, origin.length - 4)} </p>\n                                    </Col>\n                                    <Col xl={2} className=\"text-center\">\n                                        {quote.MinPrice}\n                                        {currency ? <span> {currency[0].Code}</span>:<></>}\n                                    </Col>\n                                </Row>      \n                            </ListGroup.Item>\n                        )\n                    })): <></>}\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default Places;","const currencies = [\n  \"AED\",\n  \"AFN\",\n  \"ALL\",\n  \"AMD\",\n  \"ANG\",\n  \"AOA\",\n  \"ARS\",\n  \"AUD\",\n  \"AWG\",\n  \"AZN\",\n  \"BAM\",\n  \"BBD\",\n  \"BDT\",\n  \"BGN\",\n  \"BHD\",\n  \"BIF\",\n  \"BMD\",\n  \"BND\",\n  \"BOB\",\n  \"BRL\",\n  \"BSD\",\n  \"BTC\",\n  \"BTN\",\n  \"BWP\",\n  \"BYN\",\n  \"BZD\",\n  \"CAD\",\n  \"CDF\",\n  \"CHF\",\n  \"CLF\",\n  \"CLP\",\n  \"CNH\",\n  \"CNY\",\n  \"COP\",\n  \"CRC\",\n  \"CUC\",\n  \"CUP\",\n  \"CVE\",\n  \"CZK\",\n  \"DJF\",\n  \"DKK\",\n  \"DOP\",\n  \"DZD\",\n  \"EGP\",\n  \"ERN\",\n  \"ETB\",\n  \"EUR\",\n  \"FJD\",\n  \"FKP\",\n  \"GBP\",\n  \"GEL\",\n  \"GGP\",\n  \"GHS\",\n  \"GIP\",\n  \"GMD\",\n  \"GNF\",\n  \"GTQ\",\n  \"GYD\",\n  \"HKD\",\n  \"HNL\",\n  \"HRK\",\n  \"HTG\",\n  \"HUF\",\n  \"IDR\",\n  \"ILS\",\n  \"IMP\",\n  \"INR\",\n  \"IQD\",\n  \"IRR\",\n  \"ISK\",\n  \"JEP\",\n  \"JMD\",\n  \"JOD\",\n  \"JPY\",\n  \"KES\",\n  \"KGS\",\n  \"KHR\",\n  \"KMF\",\n  \"KPW\",\n  \"KRW\",\n  \"KWD\",\n  \"KYD\", \n  \"KZT\",\n  \"LAK\",\n  \"LBP\",\n  \"LKR\",\n  \"LRD\",\n  \"LSL\",\n  \"LYD\",\n  \"MAD\",\n  \"MDL\",\n  \"MGA\",\n  \"MKD\",\n  \"MMK\",\n  \"MNT\",\n  \"MOP\",\n  \"MRO\",\n  \"MRU\",\n  \"MUR\",\n  \"MVR\",\n  \"MWK\",\n  \"MXN\",\n  \"MYR\",\n  \"MZN\",\n  \"NAD\",\n  \"NGN\",\n  \"NIO\",\n  \"NOK\",\n  \"NPR\",\n  \"NZD\",\n  \"OMR\",\n  \"PAB\",\n  \"PEN\",\n  \"PGK\",\n  \"PHP\",\n  \"PKR\",\n  \"PLN\",\n  \"PYG\",\n  \"QAR\",\n  \"RON\",\n  \"RSD\",\n  \"RUB\",\n  \"RWF\",\n  \"SAR\",\n  \"SBD\",\n  \"SCR\",\n  \"SDG\",\n  \"SEK\",\n  \"SGD\",\n  \"SHP\",\n  \"SLL\",\n  \"SOS\",\n  \"SRD\",\n  \"SSP\",\n  \"STD\",\n  \"STN\",\n  \"SVC\",\n  \"SYP\",\n  \"SZL\",\n  \"THB\",\n  \"TJS\",\n  \"TMT\",\n  \"TND\",\n  \"TOP\",\n  \"TRY\",\n  \"TTD\",\n  \"TWD\",\n  \"TZS\",\n  \"UAH\",\n  \"UGX\",\n  \"USD\",\n  \"UYU\",\n  \"UZS\",\n  \"VEF\",\n  \"VND\",\n  \"VUV\",\n  \"WST\",\n  \"XAF\",\n  \"XAG\",\n  \"XAU\",\n  \"XCD\",\n  \"XDR\",\n  \"XOF\",\n  \"XPD\",\n  \"XPF\",\n  \"XPT\",\n  \"YER\",\n  \"ZAR\",\n  \"ZMW\",\n  \"ZWL\"\n]\nexport default currencies;","\nimport React, {useState} from 'react';\nimport './AirportInfo.css';\nimport Places from \"./Places\";\n\n//REACT BOOTSTRAP\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport currencies from \"../data/currencies\";\n\n//MATERIAL UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//API KEY\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  option: {\n    fontSize: 12,\n    '& > span': {\n      marginRight: 0,\n      fontSize: 12,\n    },\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction AirportInfo() { \n    const classes = useStyles();\n    //GETTING THE DATE FOR TODAY AND TOMORROW\n    let today = new Date();\n    let tomorrow = new Date(today);\n    today = today.toISOString().split('T')[0];\n    tomorrow.setDate(tomorrow.getDate() + 1)\n    tomorrow = tomorrow.toISOString().split('T')[0];\n\n    //USE STATE FOR INPUT VALUES\n    const [currency, setCurrency] = useState(currencies[0]);\n    const [whereFrom, setWhereFrom] = useState(\"\");\n    const [whereFromList, setWhereFromList] = useState([]);\n    const [whereTo, setWhereTo] = useState(\"\");\n    const [whereToList, setWhereToList] = useState([]);\n    const [deperatureDate, setDepartureDate] = useState(today);\n    const [returnDate, setReturnDate] = useState(tomorrow);\n\n    //VALUES BASED ON OUR SEARCH RESULT\n    const [showResults,setShowResults] = useState(false)\n    const [places, setPlaces] = useState([])\n    const [currentCurrency, setCurrentCurrency] = useState([])\n    const [quotes, setQuotes] = useState([]);\n    const [error, setError] = useState(false);\n    const [whereFromCity, setWhereFromCity] = useState(\"\");\n    const [whereToCity, setWhereToCity] = useState(\"\");\n    const [origin, setOrigin] = useState(\"\");\n    const [destination, setDestination] = useState(\"\");\n\n    //TIMEOUT \n    const [originTimeOut, setOriginTimeOut] = useState(0);\n    const [destinationTimeOut, setDestinationTimeOut] = useState(0);\n\n    //ERRORS \n    const [whereToError, setWhereToError] = useState(false);\n    const [whereFromError, setWhereFromError] = useState(false);\n\n    const getOriginPlaces = (e) =>{\n        //ORIGIN PLACE\n        let startLocation = e.target.value;\n        async function fetchDepartureAirport(){\n            try{\n                let query = startLocation.split(' ').join('&');\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": `${API_KEY}`,\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${query}`, reqOptions)\n                response = await response.json()\n                setWhereFromList(response.Places)\n            }\n            catch(err){\n                console.log(err);\n            }\n        }\n        if (startLocation){\n            if ( startLocation.trim().length > 0){\n                fetchDepartureAirport();\n            }\n        }\n    }\n\n    const getArrivalPlaces = (e) =>{\n        let arrivalLocation = e.target.value;\n        //DESTINATION PLACE\n        async function fetchArrivalAirport(){\n            try{\n                let query = arrivalLocation.split(' ').join('&');\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": `${API_KEY}`,\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${query}`, reqOptions)\n                response = await response.json()\n                setWhereToList(response.Places);\n            }\n            catch(err){\n                console.log(err);\n            }\n        }\n        if (arrivalLocation){\n            if ( arrivalLocation.trim().length > 0){\n                fetchArrivalAirport();\n            }\n            \n        }\n        \n    }\n   \n    const searchForFlights = (e)=>{\n        e.preventDefault();\n        async function fetchMyAPI() {\n            try{\n                const reqOptions = {\n                    method: 'GET',\n                    headers: {\n                        \"x-rapidapi-key\": `${API_KEY}`,\n                        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n                let response = await fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/${currency}/en-US/${whereFrom}/${whereTo}/${deperatureDate}/${returnDate}`, reqOptions)\n                response = await response.json()\n                setQuotes(response.Quotes)\n                setCurrentCurrency(response.Currencies)\n                setPlaces(response.Places)\n                setShowResults(true);\n                setError(false);\n                \n            }\n            catch(err){\n                console.log(err);\n                setShowResults(false);\n                setError(true);\n            }\n        }\n        if ((whereFrom.length!==0) && (whereTo.length!==0)){\n            fetchMyAPI(); \n        \n            setOrigin(whereFrom);\n            setDestination(whereTo);\n            setWhereFrom(\"\");\n            setWhereFromCity(\"\");\n            setWhereTo(\"\");\n            setWhereToCity(\"\");\n            setDepartureDate(today);\n            setReturnDate(tomorrow);\n            document.getElementById(\"where-from\").value = \"\";\n            setWhereToError(false);\n            setWhereFromError(false);\n        }\n        else{\n            whereFrom.length === 0 ? setWhereFromError(true) : setWhereFromError(false);\n            whereTo.length === 0 ? setWhereToError(true) : setWhereToError(false);\n        }\n    }\n    \n    \n    return(\n        <div className=\"container-fluid py-4\">\n            <h1 className=\"text-center pt-4\">Search for Flights </h1>\n            \n            <div className={classes.root}>\n                <Grid container spacing={4} className=\"w-75 mx-auto\">\n                    <Grid container item xl={12} spacing={2}>\n                        <Grid item xl={4}>\n                            <label>Currency</label>\n                            <Form.Control as=\"select\" id=\"currencies\" value={currency} onChange= {(e)=> setCurrency(e.target.value)} custom>\n                                    {currencies.map((currencyOption,index)=>{\n                                        return(\n                                            <option key={index}>{currencyOption}</option>\n                                        )\n                                    })}\n                            </Form.Control>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xl={12} spacing={2}>\n                        <Grid item xl={3} className=\"w-25\">\n                            <Autocomplete\n                                id=\"where-from\"  \n                                inputValue = {whereFromCity}\n                                onChange={(event, value) => {\n                                    if (value){\n                                        let v = value.PlaceId\n                                        setWhereFrom(v)\n                                        setWhereFromCity(value.PlaceName)\n                                    }\n                                   \n                                }}\n                                options={whereFromList}\n                                classes={{\n                                    option: classes.option,\n                                }}\n                                getOptionLabel={(option) => option.PlaceName}\n                                getOptionSelected={(option, value) => option.PlaceName === value.PlaceName }\n                                renderOption={(option,key) => (\n                                    <div key={key} className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <span className=\"col-10\">{option.PlaceName}</span>\n                                            <span col=\"col-2\">{option.PlaceId.substring(0, option.PlaceId.length - 4)}</span>\n                                        </div>\n                                    \n                                    </div>\n                                )}\n                                renderInput={(params) => (\n                                    <TextField\n                                        id=\"departure-date\"\n                                        {...params}\n                                        label=\"Where From\"\n                                        variant=\"outlined\"\n                                        value={whereFrom} \n                                        onChange={(e)=> {\n                                            setWhereFrom(e.target.value);\n                                            setWhereFromCity(e.target.value);\n                                            setOriginTimeOut(originTimeOut+1);\n                                            if (originTimeOut%2 ===0){\n                                                getOriginPlaces(e);\n                                            }\n                                            \n                                        }}\n                                        \n                                    />\n                                )}\n                            />\n                            {whereFromError ? \n                                <p className=\"text-danger\">Please enter a location!</p>:\n                                <></>\n                            }\n                        </Grid>\n                        <Grid item xl={3} className=\"w-25\">\n                            <Autocomplete\n                                id=\"where-to\" \n                                inputValue = {whereToCity}\n                                onChange={(event, value) => {\n                                    if (value){\n                                        let v = value.PlaceId\n                                        setWhereTo(v)\n                                        setWhereToCity(value.PlaceName)\n                                    }\n                                    \n                                }}\n                                options={whereToList}\n                                classes={{\n                                    option: classes.option,\n                                }}\n                                getOptionLabel={(option) => option.PlaceName}\n                                getOptionSelected={(option, value) => option.PlaceName === value.PlaceName }\n                                renderOption={(option,key) => (\n                                    <div key={key} className=\"container-fluid\" >\n                                        <div className=\"row\">\n                                            <span className=\"col-10\">{option.PlaceName}</span>\n                                            <span col=\"col-2\">{option.PlaceId.substring(0, option.PlaceId.length - 4)}</span>\n                                        </div>\n                                    \n                                    </div>\n                                )}\n                                renderInput={(params) => (\n                                    <TextField\n                                        id=\"return-date\"\n                                        {...params}\n                                        label=\"Where To\"\n                                        variant=\"outlined\"\n                                        value={whereTo} \n                                        onChange={(e)=> {\n                                            setWhereTo(e.target.value);\n                                            setWhereToCity(e.target.value);\n                                            setDestinationTimeOut(destinationTimeOut+1);\n                                            if (destinationTimeOut%2 ===0){\n                                                getArrivalPlaces(e);\n                                            }\n                                        }}\n                                        \n                                    />\n                                )}\n                            />\n                            {whereToError ? \n                                <p className=\"text-danger\">Please enter a location!</p>:\n                                <></>\n                            }\n                        </Grid>\n                        <Grid item xs={3}>                            \n                            <Form.Control className=\"py-4\" variant=\"outlined\" id=\"departure-date\" type=\"date\" placeholder=\"Departure Date (yy-mm-dd)\" value={deperatureDate} onChange={(e)=> setDepartureDate(e.target.value) }/>\n                            <div id=\"departure-date-nvalid\" className=\"invalid-feedback\">You entered an empty deperature date!</div>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Form.Control className=\"py-4\" id=\"return-date\" type=\"date\" placeholder=\"Return Date (yy-mm-dd)\" value={returnDate} onChange={(e)=> setReturnDate(e.target.value) }/>\n                            <div id=\"return-date-invalid\" className=\"invalid-feedback\">You entered an empty return date!</div>\n                        </Grid>\n                    </Grid>\n                    <Grid container item xl={12} spacing={2} className=\"mx-auto justify-content-center\">\n                        <Button type=\"submit\" onClick={searchForFlights} className=\"rounded-pill px-4\">Search</Button>\n                    </Grid>\n                </Grid>\n            </div>\n\n            {/* Flight Results UI */}\n            { showResults ? (\n                    <Places quotes={quotes} currency={currentCurrency} origin={origin} destination = {destination} places={places} error={error}></Places> \n                )\n                : <></>\n            }\n        </div>\n    )\n}\n\nexport default AirportInfo;\n","import React from 'react';\n\nfunction Footer(props) { \n    return(\n        <div className=\" bg-black py-3 text-white text-center\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from \"./components/Header\";\nimport AirportInfo from \"./components/AirportInfo\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Header title=\"Flights\"/>\n      <AirportInfo/>\n      \n      <Footer title=\"2021\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}